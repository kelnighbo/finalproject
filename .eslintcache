[{"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/index.tsx":"1","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/reportWebVitals.ts":"2","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/App.tsx":"3","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Signup.tsx":"4","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Login.tsx":"5","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/auth.tsx":"6","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/appointment.tsx":"7","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Calendar.tsx":"8","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/components/Navbar.tsx":"9","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/components/List.tsx":"10","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/components/Account.tsx":"11","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/helpers/environment.js":"12"},{"size":502,"mtime":1611703915479,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1608081897849,"results":"15","hashOfConfig":"14"},{"size":2065,"mtime":1612402524054,"results":"16","hashOfConfig":"14"},{"size":3332,"mtime":1612401953094,"results":"17","hashOfConfig":"14"},{"size":2377,"mtime":1612404829661,"results":"18","hashOfConfig":"14"},{"size":1288,"mtime":1612292144331,"results":"19","hashOfConfig":"14"},{"size":4082,"mtime":1612402675286,"results":"20","hashOfConfig":"14"},{"size":5127,"mtime":1612404599723,"results":"21","hashOfConfig":"14"},{"size":544,"mtime":1612227646035,"results":"22","hashOfConfig":"14"},{"size":3461,"mtime":1612402879257,"results":"23","hashOfConfig":"14"},{"size":2470,"mtime":1612402768569,"results":"24","hashOfConfig":"14"},{"size":283,"mtime":1612406043114,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"lpfxyn",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/index.tsx",[],["58","59"],"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/reportWebVitals.ts",[],"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/App.tsx",["60"],"import React from 'react';\nimport './App.css';\nimport { Switch, BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Auth from './auth/auth';\nimport Appointment from './auth/appointment';\nimport Calendar from './auth/Calendar';\nimport Navbar from './components/Navbar';\nimport List from './components/List';\nimport Account from './components/Account'\n\n// import styled, { css } from 'styled-components';\n\n\nclass App extends React.Component<{}, { token: string | null }> {\n   constructor(props: any) {\n      super(props)\n      this.state = {\n         token: null\n\n      }\n      this.getToken = this.getToken.bind(this)\n      this.updateToken = this.updateToken.bind(this)\n   }\n   getToken() {\n      return this.state.token\n   }\n   updateToken(userToken: string) {\n      this.setState({ token: userToken })\n   }\n   deleteToken() {\n      this.setState({ token: null })\n   }\n   \n   render() {\n      const loggedIn = this.state.token\n      let display;\n      if (loggedIn) {\n         display =\n            (<div>\n               <div className=\"wrapper\">\n                  <h1>BE AWESOME TODAY</h1>\n                  <Calendar updateToken={this.updateToken} />\n                  <Route path='/list'><List token={this.state.token} /></Route>\n               </div>\n               <Route path='/appointment'><Appointment token={this.state.token} /></Route>\n            </div>\n            )\n      }\n      else { display = <Auth updateToken={this.updateToken} /> }\n      return (\n\n         <div>\n            <Router>\n               <div>\n                  <Navbar />\n                  <Route path='/account'><Account updateToken={this.updateToken} /></Route>\n               </div>\n               <Switch>\n                  {display}\n               </Switch>\n            </Router>\n         </div>\n      );\n   }\n}\n// const Container = styled.div`\n//   height: 100%;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n// `;\n// const rootElement = document.getElementById('root');\n// render(<App />, rootElement);\n\nexport default App;","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Signup.tsx",["61"],"import React, { Component } from 'react';\nimport './signup.css'; \nimport APIURL from '../helpers/environment';\n\ninterface signupProps {\n    updateToken: (token: string) => void\n}\n\ninterface signupState {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n}\n\n\nclass SignUp extends React.Component<signupProps,signupState>{\n    constructor(props: signupProps) {\n        super(props);\n\n        this.state = {\n            firstName: ``,\n            lastName: ``,\n            email: ``,\n            password: ``\n        }}\n        private handleSubmit = (e : React.FormEvent) => {\n            e.preventDefault();\n            this.SignUp()\n        }\n        SignUp = () => {\n            fetch(`${APIURL}/user/signup`, {\n                method: 'POST', \n                body: JSON.stringify({\n                    firstName: this.state.firstName,\n                    lastName: this.state.lastName,\n                    email: this.state.email,\n                    password: this.state.password\n                }),\n                headers: new Headers({\"Content-Type\": \"application/json\"})\n            })\n            .then(response => response.json())\n            .then((data) => {\n                // localStorage.setItem('userID', data.user.ID)\n                this.props.updateToken(data.sessionToken)\n                console.log(data);\n            });  \n        };\n\n    render() {\n       return (\n        <div>\n              <h2>Sign Up</h2>\n              <form onSubmit={this.handleSubmit} noValidate >\n                 <div className='firstName'>\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input type='text' name='firstName' onChange= {(event) => {\n                        this.setState({\n                        firstName: event.target.value\n                    })\n                    console.log(this.state.firstName);\n                }}/>\n                 </div>\n                 <div className='lastName'>\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type='text' name='lastName' onChange= {(event) => {\n                        this.setState({\n                            lastName: event.target.value\n                        })\n                        console.log(this.state.lastName);\n                    }}/>\n                 </div>\n                 <div className='email'>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type='email' name='email' onChange={(event) => {\n                        this.setState({\n                            email: event.target.value\n                        })\n                        console.log(this.state.email)\n                    }}/>\n                 </div>\n                 <div className='password'>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type='password' name='password' onChange={(event) => {\n                        this.setState({\n                            password: event.target.value\n                    })\n                    }}/>\n                 </div>              \n                 <div className='submit'>\n                    <button type=\"submit\">Sign Me Up!</button>\n                 </div>\n            </form>\n        </div>\n    );\n   }\n  }\n\n\nexport default SignUp;","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Login.tsx",["62"],"import React, { Component } from 'react';\nimport './login.css'; \nimport '../App';\nimport APIURL from '../helpers/environment';\n\ninterface loginProps {\n    updateToken: (token: string) => void\n}\n\ninterface loginState {\n    email: string;\n    password: string;\n}\n\nclass Login extends React.Component<loginProps,loginState>{\n    constructor(props: loginProps) {\n        super(props);\n\n        this.state = {\n            email: ``,\n            password: ``\n        }}\n         handleSubmit = (e : React.FormEvent) => {\n            e.preventDefault();\n            this.Login()\n        }\n\n        Login = () => {\n            fetch(`${APIURL}/user/login`, {\n                method: 'POST', \n                body: JSON.stringify({\n                    email: this.state.email,\n                    password: this.state.password\n                }),\n                headers: new Headers({\"Content-Type\": \"application/json\"})\n            })\n            .then(response => response.json())\n            .then((data) => {\n                // localStorage.setItem('userID', data.user.ID)\n                this.props.updateToken(data.sessionToken)\n                console.log(data);\n            });  \n        };\n\n\n    render() {\n       return (\n         <div>\n              <h2>Login</h2>\n              <form onSubmit={this.handleSubmit} noValidate >\n              <div className='email'>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type='email' name='email' onChange={(event) => {\n                        this.setState({\n                            email: event.target.value\n                        })\n                        console.log(this.state.email)\n                    }}/>\n                 </div>\n                 <div className='password'>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type='password' name='password' onChange={(event) => {\n                        this.setState({\n                            password: event.target.value\n                    })\n\n                    }}/>\n                 </div>              \n                 <div className='login'>\n                    <button type='submit'>Login!</button>\n                    <div style={{display:'flex', flexDirection: 'row'}}></div>\n                 </div>\n            </form>\n        </div>\n    );\n   }\n  }\n    \nexport default Login;","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/auth.tsx",["63"],"import React from 'react';\nimport Login from './Login';\nimport Signup from './Signup';\nimport './login.css';\nimport './signup.css';\n\ninterface LoginCheck {\n    login: boolean\n}\n\ninterface AcceptedProps {\n    updateToken: (token: string) => void\n}\n\nclass Auth extends React.Component <AcceptedProps, LoginCheck> {\n    constructor (props:AcceptedProps) {\n        super(props)\n        this.state= {\n            login: true\n        } \n    }\n    loginToggle=(event: React.MouseEvent) => {\n        event.preventDefault() \n        this.setState({...this.state,\n        login: !this.state.login})\n    }\n    authFields=() => \n    !this.state.login ? (\n        <Signup updateToken={this.props.updateToken}/>\n    ): (\n        <Login updateToken={this.props.updateToken}/>\n    ); \n    render(){\n        return(<div>\n        <div className='wrapper'>\n           <div className='form-wrapper'>\n            {this.authFields()}\n            <div style={{display:'flex', flexDirection: 'row'}}>\n            <h3>{!this.state.login ? \"Already a Member?\" : \"New Member?\"}</h3>\n            <a href=\"#\" onClick={this.loginToggle}> \n                {!this.state.login ? \"login\" : \"signup\"}\n            </a>\n            </div>\n            </div>\n            </div>\n        </div>) \n    }\n\n} \n\nexport default Auth;","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/appointment.tsx",["64","65","66","67"],"import React, { Component } from 'react';\nimport List from '../components/List';\nimport { Link, Redirect } from 'react-router-dom';\nimport './appointment.css';\nimport APIURL from '../helpers/environment';\n\ninterface MyProps {\n    token: string | null\n}\n\ninterface MyState {\n    type: string;\n    date: string;\n    time: string;\n    place: string;\n    note: string;\n    redirect: string | null\n}\n\nclass Appointment extends React.Component<MyProps,MyState>{\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            type: ``,\n            date: ``,\n            time: ``,\n            place: ``,\n            note: ``,\n            redirect: null\n        }}\n\n        private handleSubmit = (e : React.FormEvent) => {\n            e.preventDefault();\n            fetch(`${APIURL}/appointments/create`, {\n                method: 'POST',\n                body: JSON.stringify({\n                    type: this.state.type,\n                    date: this.state.date,\n                    time: this.state.time,\n                    place: this.state.place,\n                    note: this.state.note\n                }),\n                headers: new Headers ({\n                    Authorization: this.props.token as string, \n                    \"content-type\": \"application/json\"\n                })\n\n        }) .then(() => this.setState({redirect: \"/list\"}))\n    }\n\n        // componentDidMount() {\n        //     fetch('http://localhost:3000/create/appointments')\n        //     .then(response => response.json())\n        //     .then(data => this.setState({ }));\n        // }\n\n    render() {\n        if(this.state.redirect){\n            return <Redirect to={this.state.redirect}/>\n        }\n       return (\n         <div className='wrapper'>\n           <div className='form-wrapper'>\n              <h2>Appointments</h2>\n              <form onSubmit={this.handleSubmit} noValidate >\n              <div className='type'>\n                    <label htmlFor=\"type\">Type</label>\n                    <input type='type' name='type' onChange={(event) => {\n                        this.setState({\n                            type: event.target.value\n                        })\n                        console.log(this.state.type)\n                    }}/>\n                 </div>\n                 <div className='date'>\n                    <label htmlFor=\"date\">Date</label>\n                    <input type='date' name='date' onChange={(event) => {\n                        this.setState({\n                            date: event.target.value\n                    })\n                        console.log(this.state.date)\n                    }}/>   \n                    </div> \n                     <div className='time'>\n                    <label htmlFor=\"time\">Time</label>\n                    <input type='time' name='time' onChange={(event) => {\n                        this.setState({\n                            time: event.target.value\n                        })\n                        console.log(this.state.time)\n                    }}/>\n                    </div>\n                     <div className='place'>\n                    <label htmlFor=\"place\">Place</label>\n                    <input type='place' name='place' onChange={(event) => {\n                        this.setState({\n                            place: event.target.value\n                        })\n                        console.log(this.state.place)\n                    }}/>\n                     <div className='note'>\n                    <label htmlFor=\"note\">Note</label>\n                    <input type='note' name='note' onChange={(event) => {\n                        this.setState({\n                            note: event.target.value\n                        })\n                        console.log(this.state.note)\n                    }}/>\n                 </div>    \n                    </div>   \n                 <div className='add'>\n                    <button>Add!</button>\n                 </div>\n            </form>\n        </div>\n     </div>\n    );\n   }\n  }\n    \nexport default Appointment;","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Calendar.tsx",[],"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/components/Navbar.tsx",[],"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/components/List.tsx",["68","69","70"],"import * as React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Appointment from '../auth/appointment';\nimport APIURL from '../helpers/environment';\n\ninterface RouteComponentProps {\n    token: string | null\n}\n\ninterface IState {\n    appointment: any[];\n    redirect: string | null\n}\n\nclass List extends React.Component<RouteComponentProps, IState> {\n    constructor(props: RouteComponentProps) {\n        super(props);\n        this.state = { appointment: [], redirect: null }\n\n    }\n    fetchAppointment() {\n        fetch(`${APIURL}/appointments/myappointments`, {\n            method: 'GET',\n            headers: new Headers({\n                Authorization: this.props.token as string\n            })\n        }).then(result => result.json())\n            .then(json => {\n                console.log(json)\n                this.setState({ appointment: json })\n            })\n    }\n\n    deleteAppointment(id:any) {\n    fetch(`${APIURL}/appointments/delete/` +id, {\n        method: 'DELETE',\n        headers: new Headers({\n            Authorization: this.props.token as string \n        })\n    })\n        .then(response => {\n        console.log(response);\n        this.fetchAppointment()\n        })\n    }\n\n\n\n\ncomponentDidMount(){\n    this.fetchAppointment()\n}\n\nrender() {\n    const appointment = this.state.appointment;\n    return (\n        <div>\n            {appointment.length === 0 && (\n                <div className=\"text-center\">\n                    <h2>No appointment found</h2>\n                </div>\n            )}\n            <div className=\"container\">\n                <div className=\"row\">\n                    <table className=\"table table-bordered\">\n                        <thead className=\"thead-light\">\n                            <tr>\n                                <th scope=\"col\">Type</th>\n                                <th scope=\"col\">Date</th>\n                                <th scope=\"col\">Time</th>\n                                <th scope=\"col\">Place</th>\n                                <th scope=\"col\">Note</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {appointment && appointment.map(appointment =>\n                                <tr key={appointment.id}>\n                                    <td>{appointment.type}</td>\n                                    <td>{appointment.date}</td>\n                                    <td>{appointment.time}</td>\n                                    <td>{appointment.place}</td>\n                                    <td>{appointment.note}</td>\n                                    <td>\n                                        <div className=\"d-flex justify-content-between align-items-center\">\n                                            <div className=\"btn-group\" style={{ marginBottom: \"10px\" }}>\n                                                <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => this.deleteAppointment(appointment.id)}>Delete</button>\n                                                {/* `${}` */}\n                                            </div>\n                                        </div>\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\n}\nexport default List; ","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/components/Account.tsx",["71"],"import React, { Component } from 'react';\nimport './Account.css';\nimport APIURL from '../helpers/environment';\n\ninterface updateProps {\n    updateToken: (token: string) => void\n}\n\ninterface updateState {\n    email: string;\n    password: string;\n}\n\nclass Update extends React.Component<updateProps,updateState>{\n    constructor(props: updateProps) {\n        super(props);\n\n        this.state = {\n            email: ``,\n            password: ``\n        }}\n\n        private handleSubmit = (e : React.FormEvent) => {\n            e.preventDefault();\n            this.Update();\n        }\n\n        Update = () => {\n            fetch(`${APIURL}/user/updateuser`, {\n                method: 'POST', \n                body: JSON.stringify({\n                    email: this.state.email,\n                    password: this.state.password\n                }),\n                headers: new Headers({\"Content-Type\": \"application/json\"})\n            })\n            .then(response => response.json())\n            .then((data) => {\n                // localStorage.setItem('userID', data.user.ID)\n                this.props.updateToken(data.sessionToken)\n                console.log(data);\n            });  \n        };\n\n    render() {\n       return (\n         <div className='wrapper'>\n             <div className='form-wrapper'>\n              <h2>Update Account</h2>\n              <form onSubmit={this.handleSubmit} noValidate >\n              <div className='email'>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type='email' name='email' onChange={(event) => {\n                        this.setState({\n                            email: event.target.value\n                        })\n                        console.log(this.state.email)\n                    }}/>\n                 </div>\n                 <div className='password'>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type='password' name='password' onChange={(event) => {\n                        this.setState({\n                            password: event.target.value\n                    })\n\n                    }}/>\n                 </div>              \n                 <div className='update'>\n                    <button type='submit'>Update!</button>\n                    <div style={{display:'flex', flexDirection: 'row'}}></div>\n                 </div>\n            </form>\n        </div>\n        </div>\n    );\n   }\n  }\n\nexport default Update;\n","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/helpers/environment.js",["72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":3,"column":50,"nodeType":"79","messageId":"80","endLine":3,"endColumn":58},{"ruleId":"77","severity":1,"message":"81","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"81","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"83","line":40,"column":13,"nodeType":"84","endLine":40,"endColumn":52},{"ruleId":"77","severity":1,"message":"81","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"85","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":12},{"ruleId":"77","severity":1,"message":"86","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":35,"column":13,"nodeType":"89","messageId":"90","endLine":49,"endColumn":17,"fix":"91"},{"ruleId":"77","severity":1,"message":"86","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":14},{"ruleId":"77","severity":1,"message":"78","line":2,"column":16,"nodeType":"79","messageId":"80","endLine":2,"endColumn":24},{"ruleId":"77","severity":1,"message":"92","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":19},{"ruleId":"77","severity":1,"message":"81","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"93","severity":1,"message":"94","line":3,"column":1,"nodeType":"95","messageId":"96","endLine":11,"endColumn":2},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'List' is defined but never used.","'Link' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"99","text":"100"},"'Appointment' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",[1321,1323],"."]