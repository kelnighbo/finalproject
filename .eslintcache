[{"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/index.tsx":"1","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/reportWebVitals.ts":"2","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/App.tsx":"3","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Signup.tsx":"4","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Login.tsx":"5","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/auth.tsx":"6","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/appointment.tsx":"7","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Calendar.tsx":"8"},{"size":502,"mtime":1611703915479,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1608081897849,"results":"11","hashOfConfig":"10"},{"size":1532,"mtime":1612024230257,"results":"12","hashOfConfig":"10"},{"size":3299,"mtime":1611279344631,"results":"13","hashOfConfig":"10"},{"size":2433,"mtime":1611521450625,"results":"14","hashOfConfig":"10"},{"size":1296,"mtime":1611184015184,"results":"15","hashOfConfig":"10"},{"size":3127,"mtime":1611521319236,"results":"16","hashOfConfig":"10"},{"size":5141,"mtime":1612025529486,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"lpfxyn",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/index.tsx",[],["39","40"],"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/reportWebVitals.ts",[],"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/App.tsx",["41","42","43","44","45"],"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Signup.tsx",["46"],"import React, { Component } from 'react';\nimport './signup.css'; \n\ninterface signupProps {\n    updateToken: (token: string) => void\n}\n\ninterface signupState {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n}\n\n\nclass SignUp extends React.Component<signupProps,signupState>{\n    constructor(props: signupProps) {\n        super(props);\n\n        this.state = {\n            firstName: ``,\n            lastName: ``,\n            email: ``,\n            password: ``\n        }}\n        private handleSubmit = (e : React.FormEvent) => {\n            e.preventDefault();\n            this.SignUp()\n        }\n        SignUp = () => {\n            fetch('http://localhost:3000/user/signup', {\n                method: 'POST', \n                body: JSON.stringify({\n                    firstName: this.state.firstName,\n                    lastName: this.state.lastName,\n                    email: this.state.email,\n                    password: this.state.password\n                }),\n                headers: new Headers({\"Content-Type\": \"application/json\"})\n            })\n            .then(response => response.json())\n            .then((data) => {\n                // localStorage.setItem('userID', data.user.ID)\n                this.props.updateToken(data.sessionToken)\n                console.log(data);\n            });  \n        };\n\n    render() {\n       return (\n        <div>\n              <h2>Sign Up</h2>\n              <form onSubmit={this.handleSubmit} noValidate >\n                 <div className='firstName'>\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input type='text' name='firstName' onChange= {(event) => {\n                        this.setState({\n                        firstName: event.target.value\n                    })\n                    console.log(this.state.firstName);\n                }}/>\n                 </div>\n                 <div className='lastName'>\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type='text' name='lastName' onChange= {(event) => {\n                        this.setState({\n                            lastName: event.target.value\n                        })\n                        console.log(this.state.lastName);\n                    }}/>\n                 </div>\n                 <div className='email'>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type='email' name='email' onChange={(event) => {\n                        this.setState({\n                            email: event.target.value\n                        })\n                        console.log(this.state.email)\n                    }}/>\n                 </div>\n                 <div className='password'>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type='password' name='password' onChange={(event) => {\n                        this.setState({\n                            password: event.target.value\n                    })\n                    }}/>\n                 </div>              \n                 <div className='submit'>\n                    <button type=\"submit\">Sign Me Up!</button>\n                 </div>\n            </form>\n        </div>\n    );\n   }\n  }\n\n\nexport default SignUp;","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Login.tsx",["47","48","49","50","51"],"import React, { Component } from 'react';\nimport {Switch, BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\nimport './login.css'; \nimport '../App';\n\ninterface loginProps {\n    updateToken: (token: string) => void\n}\n\ninterface loginState {\n    email: string;\n    password: string;\n}\n\nclass Login extends React.Component<loginProps,loginState>{\n    constructor(props: loginProps) {\n        super(props);\n\n        this.state = {\n            email: ``,\n            password: ``\n        }}\n        private handleSubmit = (e : React.FormEvent) => {\n            e.preventDefault();\n            this.setState(this.state)\n        }\n\n        Login = () => {\n            fetch('http://localhost:3000/user/login', {\n                method: 'POST', \n                body: JSON.stringify({\n                    email: this.state.email,\n                    password: this.state.password\n                }),\n                headers: new Headers({\"Content-Type\": \"application/json\"})\n            })\n            .then(response => response.json())\n            .then((data) => {\n                // localStorage.setItem('userID', data.user.ID)\n                this.props.updateToken(data.sessionToken)\n                console.log(data);\n            });  \n        };\n\n\n    render() {\n       return (\n         <div>\n              <h2>Login</h2>\n              <form onSubmit={this.handleSubmit} noValidate >\n              <div className='email'>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type='email' name='email' onChange={(event) => {\n                        this.setState({\n                            email: event.target.value\n                        })\n                        console.log(this.state.email)\n                    }}/>\n                 </div>\n                 <div className='password'>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type='password' name='password' onChange={(event) => {\n                        this.setState({\n                            password: event.target.value\n                    })\n\n                    }}/>\n                 </div>              \n                 <div className='login'>\n                    <button>Login!</button>\n                    <div style={{display:'flex', flexDirection: 'row'}}></div>\n                 </div>\n            </form>\n        </div>\n    );\n   }\n  }\n    \nexport default Login;","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/auth.tsx",["52","53"],"import React from 'react';\nimport Login from './Login';\nimport SignUp from './Signup';\nimport Signup from './Signup';\nimport './login.css';\n\ninterface LoginCheck {\n    login: boolean\n}\n\ninterface AcceptedProps {\n    updateToken: (token: string) => void\n}\n\nclass Auth extends React.Component <AcceptedProps, LoginCheck> {\n    constructor (props:AcceptedProps) {\n        super(props)\n        this.state= {\n            login: true\n        } \n    }\n    loginToggle=(event: React.MouseEvent) => {\n        event.preventDefault() \n        this.setState({...this.state,\n        login: !this.state.login})\n    }\n    authFields=() => \n    !this.state.login ? (\n        <Signup updateToken={this.props.updateToken}/>\n    ): (\n        <Login updateToken={this.props.updateToken}/>\n    ); \n    render(){\n        return(<div>\n        <div className='wrapper'>\n           <div className='form-wrapper'>\n            {this.authFields()}\n            <div style={{display:'flex', flexDirection: 'row'}}>\n            <h3>{!this.state.login ? \"Already a Member?\" : \"New Member?\"}</h3>\n            <a href=\"#\" onClick={this.loginToggle}> \n                {!this.state.login ? \"login\" : \"signup\"}\n            </a>\n            </div>\n            </div>\n            </div>\n        </div>) \n    }\n\n} \n\nexport default Auth;","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/appointment.tsx",["54"],"import React, { Component } from 'react';\n\ninterface MyState {\n    type: string;\n    date: string;\n    time: string;\n    place: string;\n    note: string;\n}\n\nclass Login extends React.Component<{},MyState>{\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            type: ``,\n            date: ``,\n            time: ``,\n            place: ``,\n            note: ``\n        }}\n        private handleSubmit = (e : React.FormEvent) => {\n            e.preventDefault();\n            this.setState(this.state)\n        }\n\n        componentDidMount() {\n            fetch('http://localhost:3000/create/appointments')\n            .then(response => response.json())\n            .then(data => this.setState({ }));\n        }\n\n    render() {\n       return (\n         <div className='wrapper'>\n           <div className='form-wrapper'>\n              <h2>Appointments</h2>\n              <form onSubmit={this.handleSubmit} noValidate >\n              <div className='type'>\n                    <label htmlFor=\"type\">Type</label>\n                    <input type='type' name='type' onChange={(event) => {\n                        this.setState({\n                            type: event.target.value\n                        })\n                        console.log(this.state.type)\n                    }}/>\n                 </div>\n                 <div className='date'>\n                    <label htmlFor=\"date\">Date</label>\n                    <input type='date' name='date' onChange={(event) => {\n                        this.setState({\n                            date: event.target.value\n                    })\n                        console.log(this.state.date)\n                    }}/>   \n                    </div> \n                     <div className='time'>\n                    <label htmlFor=\"time\">Time</label>\n                    <input type='time' name='time' onChange={(event) => {\n                        this.setState({\n                            time: event.target.value\n                        })\n                        console.log(this.state.time)\n                    }}/>\n                    </div>\n                     <div className='place'>\n                    <label htmlFor=\"place\">Place</label>\n                    <input type='place' name='place' onChange={(event) => {\n                        this.setState({\n                            place: event.target.value\n                        })\n                        console.log(this.state.place)\n                    }}/>\n                     <div className='note'>\n                    <label htmlFor=\"note\">Note</label>\n                    <input type='note' name='note' onChange={(event) => {\n                        this.setState({\n                            note: event.target.value\n                        })\n                        console.log(this.state.note)\n                    }}/>\n                 </div>    \n                    </div>   \n                 <div className='add'>\n                    <button>Add!</button>\n                 </div>\n            </form>\n        </div>\n     </div>\n    );\n   }\n  }\n    \nexport default Login;","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Calendar.tsx",["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"65","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":14},{"ruleId":"61","severity":1,"message":"66","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":13},{"ruleId":"61","severity":1,"message":"67","line":5,"column":42,"nodeType":"63","messageId":"64","endLine":5,"endColumn":47},{"ruleId":"61","severity":1,"message":"68","line":5,"column":49,"nodeType":"63","messageId":"64","endLine":5,"endColumn":57},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"69","line":2,"column":9,"nodeType":"63","messageId":"64","endLine":2,"endColumn":15},{"ruleId":"61","severity":1,"message":"70","line":2,"column":34,"nodeType":"63","messageId":"64","endLine":2,"endColumn":40},{"ruleId":"61","severity":1,"message":"67","line":2,"column":42,"nodeType":"63","messageId":"64","endLine":2,"endColumn":47},{"ruleId":"61","severity":1,"message":"68","line":2,"column":49,"nodeType":"63","messageId":"64","endLine":2,"endColumn":57},{"ruleId":"61","severity":1,"message":"65","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":40,"column":13,"nodeType":"73","endLine":40,"endColumn":52},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"74","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":18},{"ruleId":"61","severity":1,"message":"75","line":2,"column":20,"nodeType":"63","messageId":"64","endLine":2,"endColumn":29},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'SignUp' is defined but never used.","'Login' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","'Router' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]