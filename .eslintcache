[{"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/index.tsx":"1","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/reportWebVitals.ts":"2","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/App.tsx":"3","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Signup.tsx":"4","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Login.tsx":"5","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/auth.tsx":"6","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/appointment.tsx":"7","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Calendar.tsx":"8"},{"size":502,"mtime":1611703915479,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1608081897849,"results":"11","hashOfConfig":"10"},{"size":1532,"mtime":1611709234033,"results":"12","hashOfConfig":"10"},{"size":3299,"mtime":1611279344631,"results":"13","hashOfConfig":"10"},{"size":2433,"mtime":1611521450625,"results":"14","hashOfConfig":"10"},{"size":1296,"mtime":1611184015184,"results":"15","hashOfConfig":"10"},{"size":3127,"mtime":1611521319236,"results":"16","hashOfConfig":"10"},{"size":5046,"mtime":1611879802131,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"lpfxyn",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"20"},"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/index.tsx",[],["42","43"],"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/reportWebVitals.ts",[],"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/App.tsx",["44","45","46","47","48"],"import React, { Component } from 'react';\nimport './App.css';\nimport SignUp from './auth/Signup';\nimport Login from './auth/Login';\nimport {Switch, BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\nimport Auth from './auth/auth';\nimport Appointment from './auth/appointment';\nimport Calendar from './auth/Calendar';\n// import styled, { css } from 'styled-components';\n\n\nclass App extends React.Component<{},{token:string|null}> {\n   constructor(props: any) {\n      super(props)\n      this.state={\n         token: null\n\n      }\n      this.getToken= this.getToken.bind(this)\n      this.updateToken= this.updateToken.bind(this)\n   }\n   getToken(){\n      return this.state.token\n   }\n   updateToken(userToken:string) {\n      this.setState({token: userToken})\n   }\n   deleteToken() {\n      this.setState({token:null})\n   }\n   render() {\n      const loggedIn = this.state.token\n      let display; \n      if (loggedIn) {\n         display = (<Appointment/>)\n         } \n         else {display =  <Auth updateToken={this.updateToken}/>}\n   return (\n\n     <div>\n        <div>\n      <h1>Calendar</h1>\n      <Calendar updateToken={this.updateToken}/>\n      </div>\n        <Router>\n           <Switch> \n              {display}\n           </Switch>\n        </Router>\n   </div>\n   );\n}\n}\n// const Container = styled.div`\n//   height: 100%;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n// `;\n// const rootElement = document.getElementById('root');\n// render(<App />, rootElement);\n\nexport default App;","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Signup.tsx",["49"],"import React, { Component } from 'react';\nimport './signup.css'; \n\ninterface signupProps {\n    updateToken: (token: string) => void\n}\n\ninterface signupState {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n}\n\n\nclass SignUp extends React.Component<signupProps,signupState>{\n    constructor(props: signupProps) {\n        super(props);\n\n        this.state = {\n            firstName: ``,\n            lastName: ``,\n            email: ``,\n            password: ``\n        }}\n        private handleSubmit = (e : React.FormEvent) => {\n            e.preventDefault();\n            this.SignUp()\n        }\n        SignUp = () => {\n            fetch('http://localhost:3000/user/signup', {\n                method: 'POST', \n                body: JSON.stringify({\n                    firstName: this.state.firstName,\n                    lastName: this.state.lastName,\n                    email: this.state.email,\n                    password: this.state.password\n                }),\n                headers: new Headers({\"Content-Type\": \"application/json\"})\n            })\n            .then(response => response.json())\n            .then((data) => {\n                // localStorage.setItem('userID', data.user.ID)\n                this.props.updateToken(data.sessionToken)\n                console.log(data);\n            });  \n        };\n\n    render() {\n       return (\n        <div>\n              <h2>Sign Up</h2>\n              <form onSubmit={this.handleSubmit} noValidate >\n                 <div className='firstName'>\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input type='text' name='firstName' onChange= {(event) => {\n                        this.setState({\n                        firstName: event.target.value\n                    })\n                    console.log(this.state.firstName);\n                }}/>\n                 </div>\n                 <div className='lastName'>\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type='text' name='lastName' onChange= {(event) => {\n                        this.setState({\n                            lastName: event.target.value\n                        })\n                        console.log(this.state.lastName);\n                    }}/>\n                 </div>\n                 <div className='email'>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type='email' name='email' onChange={(event) => {\n                        this.setState({\n                            email: event.target.value\n                        })\n                        console.log(this.state.email)\n                    }}/>\n                 </div>\n                 <div className='password'>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type='password' name='password' onChange={(event) => {\n                        this.setState({\n                            password: event.target.value\n                    })\n                    }}/>\n                 </div>              \n                 <div className='submit'>\n                    <button type=\"submit\">Sign Me Up!</button>\n                 </div>\n            </form>\n        </div>\n    );\n   }\n  }\n\n\nexport default SignUp;",["50","51"],"/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Login.tsx",["52","53","54","55","56"],"import React, { Component } from 'react';\nimport {Switch, BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\nimport './login.css'; \nimport '../App';\n\ninterface loginProps {\n    updateToken: (token: string) => void\n}\n\ninterface loginState {\n    email: string;\n    password: string;\n}\n\nclass Login extends React.Component<loginProps,loginState>{\n    constructor(props: loginProps) {\n        super(props);\n\n        this.state = {\n            email: ``,\n            password: ``\n        }}\n        private handleSubmit = (e : React.FormEvent) => {\n            e.preventDefault();\n            this.setState(this.state)\n        }\n\n        Login = () => {\n            fetch('http://localhost:3000/user/login', {\n                method: 'POST', \n                body: JSON.stringify({\n                    email: this.state.email,\n                    password: this.state.password\n                }),\n                headers: new Headers({\"Content-Type\": \"application/json\"})\n            })\n            .then(response => response.json())\n            .then((data) => {\n                // localStorage.setItem('userID', data.user.ID)\n                this.props.updateToken(data.sessionToken)\n                console.log(data);\n            });  \n        };\n\n\n    render() {\n       return (\n         <div>\n              <h2>Login</h2>\n              <form onSubmit={this.handleSubmit} noValidate >\n              <div className='email'>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type='email' name='email' onChange={(event) => {\n                        this.setState({\n                            email: event.target.value\n                        })\n                        console.log(this.state.email)\n                    }}/>\n                 </div>\n                 <div className='password'>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type='password' name='password' onChange={(event) => {\n                        this.setState({\n                            password: event.target.value\n                    })\n\n                    }}/>\n                 </div>              \n                 <div className='login'>\n                    <button>Login!</button>\n                    <div style={{display:'flex', flexDirection: 'row'}}></div>\n                 </div>\n            </form>\n        </div>\n    );\n   }\n  }\n    \nexport default Login;","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/auth.tsx",["57","58"],"import React from 'react';\nimport Login from './Login';\nimport SignUp from './Signup';\nimport Signup from './Signup';\nimport './login.css';\n\ninterface LoginCheck {\n    login: boolean\n}\n\ninterface AcceptedProps {\n    updateToken: (token: string) => void\n}\n\nclass Auth extends React.Component <AcceptedProps, LoginCheck> {\n    constructor (props:AcceptedProps) {\n        super(props)\n        this.state= {\n            login: true\n        } \n    }\n    loginToggle=(event: React.MouseEvent) => {\n        event.preventDefault() \n        this.setState({...this.state,\n        login: !this.state.login})\n    }\n    authFields=() => \n    !this.state.login ? (\n        <Signup updateToken={this.props.updateToken}/>\n    ): (\n        <Login updateToken={this.props.updateToken}/>\n    ); \n    render(){\n        return(<div>\n        <div className='wrapper'>\n           <div className='form-wrapper'>\n            {this.authFields()}\n            <div style={{display:'flex', flexDirection: 'row'}}>\n            <h3>{!this.state.login ? \"Already a Member?\" : \"New Member?\"}</h3>\n            <a href=\"#\" onClick={this.loginToggle}> \n                {!this.state.login ? \"login\" : \"signup\"}\n            </a>\n            </div>\n            </div>\n            </div>\n        </div>) \n    }\n\n} \n\nexport default Auth;","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/appointment.tsx",["59"],"import React, { Component } from 'react';\n\ninterface MyState {\n    type: string;\n    date: string;\n    time: string;\n    place: string;\n    note: string;\n}\n\nclass Login extends React.Component<{},MyState>{\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            type: ``,\n            date: ``,\n            time: ``,\n            place: ``,\n            note: ``\n        }}\n        private handleSubmit = (e : React.FormEvent) => {\n            e.preventDefault();\n            this.setState(this.state)\n        }\n\n        componentDidMount() {\n            fetch('http://localhost:3000/create/appointments')\n            .then(response => response.json())\n            .then(data => this.setState({ }));\n        }\n\n    render() {\n       return (\n         <div className='wrapper'>\n           <div className='form-wrapper'>\n              <h2>Appointments</h2>\n              <form onSubmit={this.handleSubmit} noValidate >\n              <div className='type'>\n                    <label htmlFor=\"type\">Type</label>\n                    <input type='type' name='type' onChange={(event) => {\n                        this.setState({\n                            type: event.target.value\n                        })\n                        console.log(this.state.type)\n                    }}/>\n                 </div>\n                 <div className='date'>\n                    <label htmlFor=\"date\">Date</label>\n                    <input type='date' name='date' onChange={(event) => {\n                        this.setState({\n                            date: event.target.value\n                    })\n                        console.log(this.state.date)\n                    }}/>   \n                    </div> \n                     <div className='time'>\n                    <label htmlFor=\"time\">Time</label>\n                    <input type='time' name='time' onChange={(event) => {\n                        this.setState({\n                            time: event.target.value\n                        })\n                        console.log(this.state.time)\n                    }}/>\n                    </div>\n                     <div className='place'>\n                    <label htmlFor=\"place\">Place</label>\n                    <input type='place' name='place' onChange={(event) => {\n                        this.setState({\n                            place: event.target.value\n                        })\n                        console.log(this.state.place)\n                    }}/>\n                     <div className='note'>\n                    <label htmlFor=\"note\">Note</label>\n                    <input type='note' name='note' onChange={(event) => {\n                        this.setState({\n                            note: event.target.value\n                        })\n                        console.log(this.state.note)\n                    }}/>\n                 </div>    \n                    </div>   \n                 <div className='add'>\n                    <button>Add!</button>\n                 </div>\n            </form>\n        </div>\n     </div>\n    );\n   }\n  }\n    \nexport default Login;","/Users/Kelly/Desktop/ElevenFiftyProjects/javascriptAugust2020/RedBadge/todo-app/client/my-app/src/auth/Calendar.tsx",["60","61"],"import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport './calendar.css';\n\nconst Frame = styled.div`\n  width: 400px;\n  border: 1px solid lightgrey;\n  box-shadow: 2px 2px 2px #eee;\n`;\n\nconst Header = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n  padding: 10px 10px 5px 10px;\n  display: flex;\n  justify-content: space-between;\n  background-color: #f5f6fa;\n`;\n\nconst Button = styled.div`\n  cursor: pointer;\n`;\n\nconst Body = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Day = styled.div`\n  width: 14.2%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  \n\n  ${props =>\n    // @ts-ignore\n    props.isToday &&\n    css`\n      border: 1px solid #eee;\n    `}\n\n  ${props =>\n    // @ts-ignore\n    props.isSelected &&\n    css`\n      background-color: #eee;   `}\n      `\n;\n\ninterface calendarProps {\n    updateToken: (token: string) => void\n}\n\ninterface calendarState {\n    days: any;\n    daysLeap: number|string|Date;\n    daysOfTheWeek: number|string|Date;\n    months: number|string|Date;\n    today: number|string|Date;\n    date: Date;\n    dateNumber: number;\n    day: any;\n    month: any;\n    year: any;\n    startDay: any;\n\n}\n\nconst DAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_OF_THE_WEEK = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\nconst MONTHS = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n\n\nclass Calendar extends React.Component<calendarProps, calendarState> {\n    constructor(props: calendarProps) {\n        super(props);\n        this.state = {\n            days: ``,\n            daysLeap: ``,\n            daysOfTheWeek: ``,\n            months: ``,\n            today: ``,\n            date: new Date(),\n            dateNumber: 0,\n            day: ``,\n            month: ``,\n            year: ``,\n            startDay: ``\n        }\n    }\n    //   const DAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    //   const DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    //   const DAYS_OF_THE_WEEK = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\n    //   const MONTHS = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n    //   const today = new Date();\n    //   const [date, setDate] = useState(today);\n    //   const [day, setDay] = useState(date.getDate());\n    //   const [month, setMonth] = useState(date.getMonth());\n    //   const [year, setYear] = useState(date.getFullYear());\n    //   const [startDay, setStartDay] = useState(getStartDayOfMonth(date));\n\n\n    componentDidMount() {\n        this.setDate(this.state.date)\n    }\n\n    setDate(d:Date) {\n        this.setState({ dateNumber: d.getDate() })\n        this.setState({ month: d.getMonth() })\n        this.setState({ year: d.getFullYear().toString() })\n        this.setState({ startDay: this.getStartDayOfMonth(d) })\n    }\n\n    getStartDayOfMonth(d:Date) {\n        return new Date(d.getFullYear(), d.getMonth(), 1).getDay();\n    }\n\n    isLeapYear(year: number) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    days = this.isLeapYear(this.state.date.getFullYear()) ? DAYS_LEAP : DAYS;\n\n    render() {\n        return (\n            <Frame>\n                <Header>\n                    <Button onClick={() => this.setState ({date: new Date(this.state.year, this.state.month - 1, this.state.dateNumber)})}>Prev</Button>\n                    <div>\n                        {MONTHS[this.state.month]} {this.state.year}\n                    </div>\n                    <Button onClick={() => this.setState({date: new Date(this.state.year, this.state.month + 1, this.state.dateNumber)})}>Next</Button>\n                </Header>\n                <Body>\n                    {DAYS_OF_THE_WEEK.map(d => (\n                        <Day key={d}>\n                            <strong>{d}</strong>\n                        </Day>\n                    ))}\n                    {Array(this.state.days[this.state.month] + (this.state.startDay - 1))\n                        .fill(null)\n                        .map((_, index) => {\n                            const d = index - (this.state.startDay - 2);\n                            return (\n                                <Day\n                                    key={index}\n                                    // @ts-ignore\n                                    isToday={d === this.state.today.getDate()}\n                                    isSelected={d === this.state.day}\n                                    onClick={() => this.setDate(new Date(this.state.year, this.state.month, d))}\n                                >\n                                    {d > 0 ? d : ''}\n                                </Day>\n                            );\n                        })}\n                </Body>\n            </Frame>\n        );\n    }\n}\n\nexport default Calendar; ",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"70","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":14},{"ruleId":"66","severity":1,"message":"71","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":13},{"ruleId":"66","severity":1,"message":"72","line":5,"column":42,"nodeType":"68","messageId":"69","endLine":5,"endColumn":47},{"ruleId":"66","severity":1,"message":"73","line":5,"column":49,"nodeType":"68","messageId":"69","endLine":5,"endColumn":57},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"62","replacedBy":"74"},{"ruleId":"64","replacedBy":"75"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"76","line":2,"column":9,"nodeType":"68","messageId":"69","endLine":2,"endColumn":15},{"ruleId":"66","severity":1,"message":"77","line":2,"column":34,"nodeType":"68","messageId":"69","endLine":2,"endColumn":40},{"ruleId":"66","severity":1,"message":"72","line":2,"column":42,"nodeType":"68","messageId":"69","endLine":2,"endColumn":47},{"ruleId":"66","severity":1,"message":"73","line":2,"column":49,"nodeType":"68","messageId":"69","endLine":2,"endColumn":57},{"ruleId":"66","severity":1,"message":"70","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":40,"column":13,"nodeType":"80","endLine":40,"endColumn":52},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"81","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":18},{"ruleId":"66","severity":1,"message":"82","line":2,"column":20,"nodeType":"68","messageId":"69","endLine":2,"endColumn":29},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'SignUp' is defined but never used.","'Login' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.",["83"],["84"],"'Switch' is defined but never used.","'Router' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]